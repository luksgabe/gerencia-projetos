@using Projeto_Academico.ViewModels
@model UsuariosViewModel

@{
    ViewBag.Title = "Usuario Edição";
    ViewBag.PageTitle = "Edição de Usuário";
    Layout = "~/Views/Shared/_Admin_Template.cshtml";
}
<ul class="breadcrumb">
    <div class="container-fluid">
        <li class="breadcrumb-item">@Html.ActionLink("Painel de Controle", "Index", "Controle")</li>
        <li class="breadcrumb-item ">@Html.ActionLink("Controle Usuarios", "Usuarios", "Controle")</li>
        <li class="breadcrumb-item active">@ViewBag.PageTitle</li>
    </div>
</ul>

<section class="form-invite">
    <div class="row">
        <div class="col-lg-6 col-md-6 offset-lg-3 offset-md-3">
            <div class="card">
                <div class="card-header d-flex align-items-center">
                    <h3 class="h4">Editar Usuário</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("UsuarioEdicao", "Controle", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Nome, new { @class = "col-sm-3 form-control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(m => m.Nome, new { @class = "form-control form-control-success", @id = "inputHorizontalSuccess", placeholder = "Nome", required = true })
                                @Html.ValidationMessageFor(m => m.Nome, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Apelido, new { @class = "col-sm-3 form-control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(m => m.Apelido, new { @class = "form-control form-control-success", @id = "inputHorizontalSuccess", placeholder = "Apelido", required = true })
                                @Html.ValidationMessageFor(m => m.Apelido, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Cargo, new { @class = "col-sm-3 form-control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(m => m.Cargo, new { @class = "form-control form-control-success", @id = "inputHorizontalSuccess", placeholder = "Cargo" })
                                @Html.ValidationMessageFor(m => m.Cargo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Email, new { @class = "col-sm-3 form-control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-success", @id = "txtEmail", placeholder = "E-mail"})
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Ativo, new { @class = "col-sm-3 form-control-label" })
                            <div class="col-sm-9">
                                @Html.DisplayFor(m => m.Ativo, new { @class = "form-control form-control-success", @id = "inputHorizontalSuccess", placeholder = "Ativo", required = true })
                                @Html.ValidationMessageFor(m => m.Ativo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.listaGrupo, new { @class = "col-sm-3 form-control-label" })
                            <div class="col-sm-9">
                                @Html.DropDownListFor(x => x.listaGrupoIndexChange, (IEnumerable<SelectListItem>)ViewBag.Perfil, new { @class = "form-control form-control-success", @id="ddlListaGrupo", @onchange = "ListaGrupoChange()" })
                                @Html.ValidationMessageFor(m => m.listaGrupo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-sm-9 offset-sm-3">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger", @id = "form-login" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-sm-9 offset-sm-5">
                                <input type="submit" value="Salvar" class="btn btn-primary">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    <script type="text/javascript">    
        $(function () {
            $("#txtEmail").prop("readonly", true);
        });

        function ListaGrupoChange() {
            
        }

    </script>
}

